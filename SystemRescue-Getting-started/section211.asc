[#chapter_dataovernet]
== Chapter 11: How to Recover Files Over a Network
The previous chapter provided guidance for recovering data files stored on a computer with a damaged operating system by copying them to another disk. This chapter also is focused on data recovery, but this time files are copied over a network. Files will be copied from a computer running SystemRescue to another computer on the network, so you don't need an external disk for storing a copy of the original files. The two computers must be able to communicate with each other. This is normally not a problem if they are connected to the same home or corporate network by either Ethernet or Wi-Fi.

Let's say the operating system on your primary computer stopped working and you want to transfer your data to another computer that works fine. You will use SystemRescue on the primary computer to access the data stored on the local disk. You will connect the secondary computer to the primary one and download the files. You will transfer the data using the SFTP protocol (SSH File Transfer Protocol) which is secure and easy to use. The computer running SystemRescue acts as a server to share the data over SFTP. The secondary computer acts as an SFTP client that establishes the connection to the primary computer to download the data over the network.

The first few steps are similar to those in the previous chapter as the procedure to access the data located on the internal disk is the same.

=== Identifying the disk
Start SystemRescue on the primary computer and open a terminal in the graphical environment. Then, identify the name of the device where the data you want to recover are stored, using the `lsblk` command:
[subs=+quotes]
----
[root@sysrescue ~]# *lsblk -o path,size,fstype,label,model*
PATH         SIZE FSTYPE      LABEL     MODEL
/dev/sdc   465.8G                       Samsung_SSD_850_EVO_mSATA
/dev/sdc1      4G vfat        UEFI_ESP
/dev/sdc2    5.2G btrfs       boot
/dev/sdc3  406.5G crypto_LUKS
/dev/sdc4     16M
/dev/sdc5     48G ntfs        Windows
/dev/sdc6      2G vfat        SOFTWARE
----

We are going to copy data from the Windows disk identified as `/dev/sdc5` in this example. As usual you should modify these details so they match your situation.

=== Mounting the disk
The disk that contains the data to be transferred must be mounted so it is accessible. Create the mount point using the `mkdir` command in a terminal. Again we are calling this mount point `internal` as it is assumed the original files are located on an internal disk.
[subs=+quotes]
----
[root@sysrescue ~]# *mkdir -p /mnt/internal*
----

The file system should be mounted in read-only mode as write access is not required, and this reduces the risk of accidentally deleting these data files:
[subs=+quotes]
----
[root@sysrescue ~]# *mount /dev/sdc5 /mnt/internal -o ro*
----

=== Connecting to the network
Both computers must be connected to the network so data can be transferred. On SystemRescue use the NetworkManager to configure the connection to either an Ethernet or Wi-Fi network. It is accessible from its icon in the notification area next to the clock. You can also use an alternative method such as commands if you prefer. Once you are connected to the network, get the current IP address of this computer so the client knows where to connect in a later step. You get this address by clicking on the NetworkManager icon with the right button of the mouse and selecting `Connection Information` in the menu. If necessary, please refer to <<chapter_network>> to get more details about the network configuration.

=== Starting the SFTP service
The computer running SystemRescue works as an SFTP server to allow the secondary computer to access the data. SystemRescue comes with OpenSSH, which can be used as an SFTP server. It runs as a service in the background, so there is no graphical interface. It can be configured using text files, but the default configuration does not require any change so files can be transferred as documented here.

This service is enabled by default, but you should double check that it is still enabled on the version you are using by running the following command in the terminal:
[subs=+quotes]
----
[root@sysrescue ~]# *systemctl is-active sshd*
active
----

If the service was not active, you should start it using the following command:
[subs=+quotes]
----
[root@sysrescue ~]# *systemctl restart sshd*
----

=== Disabling the firewall
To increase security, SystemRescue comes with the firewall enabled by default. The firewall blocks incoming connections. In this situation, the secondary computer must be able to connect to the SFTP server running in SystemRescue, so the firewall must be configured or disabled to allow the client to connect.

If you are connected to a trusted network, the simplest solution is to stop the firewall services in SystemRescue using the following command.
[subs=+quotes]
----
[root@sysrescue ~]# *systemctl stop iptables ip6tables*
----

Then check that the firewall services have been stopped successfully:
[subs=+quotes]
----
[root@sysrescue ~]# *systemctl is-active iptables*
inactive
[root@sysrescue ~]# *systemctl is-active ip6tables*
inactive
----

As an alternative, you could add a rule to the firewall so only the secondary computer is allowed to connect. If necessary, please refer to <<chapter_network>> to get more details.

=== Setting the root password
The SFTP client must authenticate using a username and a password so it can access the data from the SFTP server. The system `root` account is used so the client can access files that are visible in SystemRescue. By default, authentication as the `root` account in SystemRescue is not allowed. A password must be set to allow the client to authenticate. Create a password to use in the following steps. Only the password of the `root` user account on the live system is changed. Passwords used by operating systems on the disk will not be affected by this operation.

Set the password of the `root` account by typing `passwd root` in a terminal in SystemRescue. You will be asked to type the password twice (or multiple times in case of errors). For security reasons, the password does not appear on the screen as you type it.
[subs=+quotes]
----
[root@sysrescue ~]# *passwd root*
New password:
Retype new password:
passwd: password updated successfully
----

=== Installing an SFTP client
The client computer must execute an SFTP client to connect to the SFTP server. You can use any SFTP client you like. The recommended program is FileZilla client, as it is a good quality program and it is available for Linux, Windows and MacOS. It can be downloaded for free from the official project website: https://filezilla-project.org/. If you prefer an alternative, please make sure it supports the SFTP protocol, as it is very different from the FTP and FTPS protocols, even though they are all used to transfer files.

An alternative to SFTP is to use rsync. It is a very powerful program and can work with OpenSSH to transfer files over a network. It is widely available on Linux distributions. Using rsync requires more effort at first, so FileZilla client is used in the current example.

=== Copying data using FileZilla
Now run the FileZilla client on the secondary computer to connect to the SFTP server running in SystemRescue.

image::images/filezilla-client.png[The FileZilla client]

You must first provide the connection details using the quick connect bar at the top of the window.

* The `Host` is the IP address of the computer running SystemRescue.
* The `Username` is `root` as this is the system user account you are using to authenticate on the SFTP server.
* The `Password` is the password you created in a previous step.
* The `Port` should be `22` as it is the default port for the SSH/SFTP service.

When you are ready, press the `Quickconnect` button. If the connection is successful you will see files and folders appear. The screen is divided into two panes. The first pane represents local files and folders from the computer running the FileZilla client. The other pane shows remote files on the primary computer running as an SFTP server in SystemRescue.

On both sides you must navigate to the relevant folders. On the remote side, find the files that you want to copy by navigating to the mount point such as `/mnt/internal`. On the local side, find the folder where you want the remote files to be copied. When you have found these two locations, you can copy the remote files to the local folder by using a simple drag and drop. Select files and folders on the remote side and drag them to the relevant folder on the local side. The copy of the files should start immediately. You can follow the progress by looking at the list of files at the bottom of the screen.

When the operation is complete, use your favourite file manager on the client computer to make sure all files that you expect have been successfully transferred.

=== Troubleshooting
If the connection is not successful, read the messages that appear just below the connection bar on the FileZilla client. Error messages provide the information you need to understand what has gone wrong. It is important to differentiate connectivity issues from authentication issues to focus on the cause of the problem.

A connectivity problem occurs when the client cannot communicate with the server. This can happen if the network is not configured properly. For example, one of the two computers might not be connected to the network, the two computers might not be on the same network, or the wrong IP address was used on the SFTP client. Connectivity issues can also happen when network traffic is blocked by a firewall on either computer or by network equipment between them.

For authentication problems, the SFTP client and server applications can communicate over the network, but the SFTP server rejects the connection request from the client. This can happen if the username or password is incorrect or when the SSH/SFTP server is configured to restrict incoming connections.

You should also check the OpenSSH service logs by running `journalctl -f --unit=sshd` in a terminal in SystemRescue before you try to connect again from the client. If you see authentication errors, it means there is no connectivity problem and you should check the username and the password. If you don't see any error message, it is an indication that the server has not received any connection request from the client, so you must fix the connectivity problem by checking the most likely causes mentioned above.
